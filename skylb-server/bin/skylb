#!/bin/bash

set -e

base_dir="$(dirname "$0")/.."
lib_dir="$base_dir/lib"
lib_dir_development="$base_dir/target/lib"
if [ ! -e "$lib_dir" -a -e "$lib_dir_development" ]; then
	lib_dir="$lib_dir_development"
fi

#echo "base_dir=" "$base_dir"
#echo "lib_dir=" "$lib_dir"

START_JAR=`ls -F $lib_dir | grep "$SERVER_NAME" | grep .jar$`
#echo "START_JAR=" "$START_JAR"

#SERVER_NAME='skylb'
#PIDS=`ps -f | grep java | grep "$SERVER_NAME" | grep -v grep |awk '{print $2}'`
#if [ -n "$PIDS" ]; then
#    echo "ERROR: The $SERVER_NAME already started!"
#    echo "PID: $PIDS"
#    exit 1
#fi

# Log directory to use
if [ "x$LOG_DIR" = "x" ]; then
    LOG_DIR="$base_dir/logs"
fi
# Create logs directory
if [ ! -d "$LOG_DIR" ]; then
    mkdir -p "$LOG_DIR"
fi

STDOUT_FILE=$LOG_DIR/stdout.log

JAVA_DEBUG_OPTS=""
if [ "$1" = "debug" ]; then
    JAVA_DEBUG_OPTS=" -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8007,server=y,suspend=n "
fi

JAVA_MEM_OPTS=""
BITS=`java -version 2>&1 | grep -i 64-bit`
if [ -n "$BITS" ]; then
    JAVA_MEM_OPTS=" -server -Xmx1g -Xms1g -Xmn256m -Xss256k "
else
    JAVA_MEM_OPTS=" -server -Xmx1g -Xms1g -XX:SurvivorRatio=2 -XX:+UseParallelGC "
fi

# GC options
GC_FILE_SUFFIX='-gc.log'
GC_LOG_FILE_NAME=''
if [ "x$GC_LOG_ENABLED" = "xtrue" ]; then
  GC_LOG_FILE_NAME=$DAEMON_NAME$GC_FILE_SUFFIX
  SKYLB_GC_LOG_OPTS="-Xloggc:$LOG_DIR/$GC_LOG_FILE_NAME -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps "
fi

if [ -z "$JAVA_HOME" ]; then
	JAVA="java"
else
	JAVA="$JAVA_HOME/bin/java"
fi

# Launch mode
if [ "x$DAEMON_MODE" = "xtrue" ]; then
    nohup $JAVA $JAVA_OPTS $JAVA_MEM_OPTS $JAVA_DEBUG_OPTS $SKYLB_GC_LOG_OPTS -Dfile.encoding=UTF-8 -jar $lib_dir/$START_JAR "$@" > "$STDOUT_FILE" 2>&1 < /dev/null &
else
    exec $JAVA $JAVA_OPTS $JAVA_MEM_OPTS $JAVA_DEBUG_OPTS $SKYLB_GC_LOG_OPTS -Dfile.encoding=UTF-8 -jar $lib_dir/$START_JAR "$@"
fi