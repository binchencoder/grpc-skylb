#!/bin/bash

set -e

base_dir="$(dirname "$0")/.."
lib_dir="$base_dir/lib"
lib_dir_development="$base_dir/target/skylblib"
if [ ! -e "$lib_dir" -a -e "$lib_dir_development" ]; then
	lib_dir="$lib_dir_development"
fi

SERVER_NAME='skylb'
START_JAR=`ls -F $lib_dir | grep -i $SERVER_NAME | grep .jar$`

# Which java to use
if [ -z "$JAVA_HOME" ]; then
  JAVA="java"
else
  JAVA="$JAVA_HOME/bin/java"
fi

while [ $# -gt 0 ];
do
  COMMAND=$1
  case $COMMAND in
    -debug)
      SKYLB_DEBUG="true"
      shift
      ;;
    -loggc)
      if [ -z "$JAVA_GC_LOG_OPTS" ]; then
        GC_LOG_ENABLED="true"
      fi
      shift
      ;;
    -daemon)
      DAEMON_MODE="true"
      DAEMON_NAME="SkyLBDaemon"
      shift
      ;;
    *)
      break
      ;;
  esac
done

# Generic jvm settings you want to add
if [ -z "$JAVA_OPTS" ]; then
  JAVA_OPTS=""
fi

# Set Debug options if enabled
if [ "x$SKYLB_DEBUG" != "x" ]; then

  # Use default ports
  DEFAULT_JAVA_DEBUG_PORT="5005"

  if [ -z "$JAVA_DEBUG_PORT" ]; then
    JAVA_DEBUG_PORT="$DEFAULT_JAVA_DEBUG_PORT"
  fi

  # Use the defaults if JAVA_DEBUG_OPTS was not set
  DEFAULT_JAVA_DEBUG_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=${DEBUG_SUSPEND_FLAG:-n},address=$JAVA_DEBUG_PORT"
  if [ -z "$JAVA_DEBUG_OPTS" ]; then
    JAVA_DEBUG_OPTS="$DEFAULT_JAVA_DEBUG_OPTS"
  fi

  echo "Enabling Java debug options: $JAVA_DEBUG_OPTS"
  JAVA_OPTS="$JAVA_DEBUG_OPTS $JAVA_OPTS"
fi

# Log directory to use
if [ "x$LOG_DIR" = "x" ]; then
  LOG_DIR="$base_dir/logs"
fi
# Create logs directory
if [ ! -d "$LOG_DIR" ]; then
  mkdir -p "$LOG_DIR"
fi

# Daemon mode console output
if [ "x$DAEMON_MODE" = "xtrue" ]; then
  # Console output file when skylb runs as a daemon
  CONSOLE_OUTPUT_FILE=$LOG_DIR/$DAEMON_NAME.out
  echo "Redirecting STDOUT to $CONSOLE_OUTPUT_FILE"
fi

# GC options
GC_FILE_SUFFIX='-gc.log'
GC_LOG_FILE_NAME=''
if [ "x$GC_LOG_ENABLED" = "xtrue" ]; then
  if [ "x$DAEMON_MODE" = "xtrue" ]; then
    GC_LOG_FILE_NAME=$DAEMON_NAME$GC_FILE_SUFFIX
  else
    GC_LOG_FILE_NAME=SkyLB$GC_FILE_SUFFIX
  fi;

  # The first segment of the version number, which is '1' for releases before Java 9
  # it then becomes '9', '10', ...
  # Some examples of the first line of `java --version`:
  # 8 -> java version "1.8.0_152"
  # 9.0.4 -> java version "9.0.4"
  # 10 -> java version "10" 2018-03-20
  # 10.0.1 -> java version "10.0.1" 2018-04-17
  # We need to match to the end of the line to prevent sed from printing the characters that do not match
  JAVA_MAJOR_VERSION=$($JAVA -version 2>&1 | sed -E -n 's/.* version "([0-9]*).*$/\1/p')
  echo $($JAVA -version)
  if [[ "$JAVA_MAJOR_VERSION" -ge "9" ]] ; then
    JAVA_GC_LOG_OPTS="-Xlog:gc*:file=$LOG_DIR/$GC_LOG_FILE_NAME:time,tags:filecount=10,filesize=102400"
  else
    JAVA_GC_LOG_OPTS="-Xloggc:$LOG_DIR/$GC_LOG_FILE_NAME -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M"
  fi
fi

# Memory options
if [ -z "$JAVA_HEAP_OPTS" ]; then
  JAVA_HEAP_OPTS="-Xmx256M"
fi

# JVM performance options
if [ -z "$JAVA_JVM_PERFORMANCE_OPTS" ]; then
  #JAVA_JVM_PERFORMANCE_OPTS="-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -Djava.awt.headless=true"
  JAVA_JVM_PERFORMANCE_OPTS="-server -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=1 -XX:CMSInitiatingOccupancyFraction=75 -XX:CMSWaitDuration=10000"
fi

if [ "x$DAEMON_MODE" = "xtrue" ]; then
  echo "Java Opts: $JAVA_HEAP_OPTS $JAVA_JVM_PERFORMANCE_OPTS $JAVA_GC_LOG_OPTS $JAVA_OPTS"
fi

# Launch mode
if [ "x$DAEMON_MODE" = "xtrue" ]; then
  nohup $JAVA $JAVA_HEAP_OPTS $JAVA_JVM_PERFORMANCE_OPTS $JAVA_GC_LOG_OPTS $JAVA_OPTS \
    -jar $lib_dir/$START_JAR "$@" \
    > "$CONSOLE_OUTPUT_FILE" 2>&1 < /dev/null &
else
  exec $JAVA $JAVA_HEAP_OPTS $JAVA_JVM_PERFORMANCE_OPTS $JAVA_GC_LOG_OPTS $JAVA_OPTS \
    -jar $lib_dir/$START_JAR "$@"
fi

# Echo PID
PIDS=$(ps ax | grep -i "$START_JAR" | grep java | grep -v grep | awk '{print $1}')
echo
echo "Started server PID: $PIDS"