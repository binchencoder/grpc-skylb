<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>skylb-client</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>gRPC SkyLB Client</name>

	<parent>
		<groupId>com.binchencoder.skylb</groupId>
		<artifactId>grpc-skylb</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<organization>
		<name>Binchencoder</name>
		<url>https://www.github.com/binchencoder</url>
	</organization>
	<repositories>
		<repository>
			<id>mvn-repo</id>
			<url>https://raw.github.com/binchencoder/mvn-repo/master</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<encoding>UTF-8</encoding>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Maven properties -->
		<maven.test.skip>false</maven.test.skip>
		<maven.javadoc.skip>true</maven.javadoc.skip>
		<!-- Compiler settings properties -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>
		<!-- Self services. -->
		<!-- data-proto and frontend-proto have only one
		 version (the SNAPSHOT version), thus can be enclosed by skylb-client. -->
		<dependency>
			<groupId>com.binchencoder.gateway</groupId>
			<artifactId>data-proto</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.binchencoder.gateway</groupId>
			<artifactId>frontend-proto</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.binchencoder.skylb</groupId>
			<artifactId>skylb-api-proto</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<!-- gRPC + ProtoBuffer -->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-protobuf</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-services</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-stub</artifactId>
		</dependency>
		<dependency><!-- Exclude this if you use other ways to server grpc -->
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Prometheus -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient</artifactId>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_servlet</artifactId>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!-- Import this if you need MonitorService -->
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-core</artifactId>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>

		<!-- Logging. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Testing. -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.4.1.Final</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<outputDirectory>${basedir}/../target</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>${basedir}/target</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version >0.12</version>
				<configuration>
					<message >Maven artifacts for ${project.version}</message>
					<noJekyll>true</noJekyll>
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory><!--本地jar地址-->
					<branch>refs/heads/master</branch><!--分支的名称-->
					<merge>true</merge>
					<includes>
						<include>**/*</include>
					</includes>
					<repositoryName>mvn-repo</repositoryName><!--对应github上创建的仓库名称 name-->
					<repositoryOwner>binchencoder</repositoryOwner><!--github 仓库所有者即登录用户名-->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
